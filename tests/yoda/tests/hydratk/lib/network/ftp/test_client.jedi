Test-Scenario-1:
  id: ts_01
  path: tests/hydratk/lib/network/ftp/test_client.jedi
  name: test_client
  desc: Unit tests for module hydratk/lib/network/ftp/client.py
  author: Petr Rasek <bowman@hydratk.org>
  version: 1.0
  
  pre-req: |
    import hydratk.lib.network.ftp.client as ftp
    
  Test-Case-1:
    id: tc_01
    name: ftp_client
    desc: Tests for method FTPClient
  
    Test-Condition-1: 
      id: tco_01
      name: ftp_client
      desc: Create FTP client instance
      test: |
        protocol = 'FTP'        
        client = ftp.FTPClient(protocol) 
                         
      validate: |  
        current = '{0}.{1}'.format(client.__module__, client.__class__.__name__)
        expected = 'hydratk.lib.network.ftp.ftp_client.FTPClient'
        this.test_result = (current == expected)
        assert (this.test_result == True), 'expected: {0}, current: {1}'.format(current, expected)     
        
    Test-Condition-2: 
      id: tco_02
      name: sftp_client
      desc: Create SFTP client instance
      test: |
        protocol = 'SFTP'        
        client = ftp.FTPClient(protocol) 
                         
      validate: |  
        current = '{0}.{1}'.format(client.__module__, client.__class__.__name__)
        expected = 'hydratk.lib.network.ftp.sftp_client.FTPClient'
        this.test_result = (current == expected)
        assert (this.test_result == True), 'expected: {0}, current: {1}'.format(current, expected)         
        
    Test-Condition-3: 
      id: tco_03
      name: tftp_client
      desc: Create TFTP client instance
      test: |
        protocol = 'TFTP'        
        client = ftp.FTPClient(protocol) 
                         
      validate: |  
        current = '{0}.{1}'.format(client.__module__, client.__class__.__name__)
        expected = 'hydratk.lib.network.ftp.tftp_client.FTPClient'
        this.test_result = (current == expected)
        assert (this.test_result == True), 'expected: {0}, current: {1}'.format(current, expected)  
        
    Test-Condition-4: 
      id: tco_04
      name: default_client
      desc: Create default client instance
      test: |     
        client = ftp.FTPClient() 
                         
      validate: |  
        current = '{0}.{1}'.format(client.__module__, client.__class__.__name__)
        expected = 'hydratk.lib.network.ftp.ftp_client.FTPClient'
        this.test_result = (current == expected)
        assert (this.test_result == True), 'expected: {0}, current: {1}'.format(current, expected)                                   
        
    Test-Condition-5: 
      id: tco_05
      name: unknown_client
      desc: Create unknown client
      test: |      
        try:
            protocol = 'XXX'
            client = ftp.FTPClient(protocol) 
            result = False
        except ValueError:    
            result = True
                         
      validate: |  
        this.test_result = (result == True)
        assert (this.test_result == True), 'expected ValueError'                     