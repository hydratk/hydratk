Test-Scenario-1:
  Id: ts_01
  Path: hydratk/core/eventhandler/01_methods_ut.jedi
  Name: ts_eh_htk_on_debug_info
  Desc: Test _eh_htk_on_debug_info method
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from hydratk.core.masterhead import MasterHead  
    import sys

    try:
        from StringIO import StringIO
    except ImportError:
        from io import StringIO     
  
  Test-Case-1:
    Id: tc_01
    Name: tc_debug
    Desc: Print debug message
   
    Test-Condition-1:
      Id: tco_01
      Name: tco_debug
      Desc: Print debug message  
      
      Test: |
        mh = MasterHead.get_head()
        mh._debug = True
        old = sys.stdout
        sys.stdout = res = StringIO()
        msg = 'testmsg'
        mh._eh_htk_on_debug_info('test', msg)
        res = res.getvalue()
        sys.stdout = old            
      
      Validate: |  
        this.test_result = res
        assert (msg in res), '_eh_htk_on_debug_info contains {0}'.format(msg) 
        mh._debug = False 
        
Test-Scenario-2:
  Id: ts_02
  Path: hydratk/core/eventhandler/01_methods_ut.jedi
  Name: ts_eh_htk_on_warning
  Desc: Test _eh_htk_on_warning method
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from hydratk.core.masterhead import MasterHead
    import sys
 
    try:
        from StringIO import StringIO
    except ImportError:
        from io import StringIO 
  
  Test-Case-1:
    Id: tc_01
    Name: tc_warning
    Desc: Print warning message
   
    Test-Condition-1:
      Id: tco_01
      Name: tco_warning
      Desc: Print warning message
      
      Test: |
        mh = MasterHead.get_head()
        old = sys.stdout
        sys.stdout = res = StringIO()
        msg = 'testmsg'
        mh._eh_htk_on_warning('test', msg)
        res = res.getvalue()
        sys.stdout = old        
      
      Validate: |       
        this.test_result = res
        assert (msg in res), '_eh_htk_on_warning contains {0}'.format(msg)  
        
Test-Scenario-3:
  Id: ts_03
  Path: hydratk/core/eventhandler/01_methods_ut.jedi
  Name: ts_eh_htk_on_extension_warning
  Desc: Test _eh_htk_on_extension_warning method
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from hydratk.core.masterhead import MasterHead
    import sys

    try:
        from StringIO import StringIO
    except ImportError:
        from io import StringIO 
  
  Test-Case-1:
    Id: tc_01
    Name: tc_warning
    Desc: Print warning message
   
    Test-Condition-1:
      Id: tco_01
      Name: tco_warning
      Desc: Print warning message
      
      Test: |
        mh = MasterHead.get_head()
        old = sys.stdout
        sys.stdout = res = StringIO()
        msg = 'testmsg'
        mh._eh_htk_on_extension_warning('test', msg)
        res = res.getvalue()
        sys.stdout = old        
      
      Validate: |       
        this.test_result = res
        assert (msg in res), '_eh_htk_on_extension_warning contains {0}'.format(msg) 
        
Test-Scenario-4:
  Id: ts_04
  Path: hydratk/core/eventhandler/01_methods_ut.jedi
  Name: ts_eh_htk_on_error
  Desc: Test _eh_htk_on_error method
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from hydratk.core.masterhead import MasterHead
    import sys

    try:
        from StringIO import StringIO
    except ImportError:
        from io import StringIO 
  
  Test-Case-1:
    Id: tc_01
    Name: tc_error
    Desc: Print error message
   
    Test-Condition-1:
      Id: tco_01
      Name: tco_error
      Desc: Print error message
      
      Test: |
        mh = MasterHead.get_head()
        old = sys.stdout
        sys.stdout = res = StringIO()
        msg = 'testmsg'
        mh._eh_htk_on_error('test', msg)
        res = res.getvalue()
        sys.stdout = old        
      
      Validate: |       
        this.test_result = res
        assert (msg in res), '_eh_htk_on_error contains {0}'.format(msg)        
        
Test-Scenario-5:
  Id: ts_05
  Path: hydratk/core/eventhandler/01_methods_ut.jedi
  Name: ts_eh_htk_on_exception
  Desc: Test _eh_htk_on_exception method
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from hydratk.core.masterhead import MasterHead
    import sys

    try:
        from StringIO import StringIO
    except ImportError:
        from io import StringIO 
  
  Test-Case-1:
    Id: tc_01
    Name: tc_exception
    Desc: Print exception message
   
    Test-Condition-1:
      Id: tco_01
      Name: tco_exception
      Desc: Print exception message
      
      Test: |
        mh = MasterHead.get_head()
        old = sys.stdout
        sys.stdout = res = StringIO()
        msg = 'testmsg'
        mh._eh_htk_on_exception('test', 'testex', msg, None)
        res = res.getvalue()
        sys.stdout = old        
      
      Validate: |       
        this.test_result = res
        assert (msg in res), '_eh_htk_on_exception contains {0}'.format(msg)  
        
Test-Scenario-6:
  Id: ts_06
  Path: hydratk/core/eventhandler/01_methods_ut.jedi
  Name: ts_eh_htk_on_extension_error
  Desc: Test _eh_htk_on_extension_error method
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from hydratk.core.masterhead import MasterHead
    import sys

    try:
        from StringIO import StringIO
    except ImportError:
        from io import StringIO 
  
  Test-Case-1:
    Id: tc_01
    Name: tc_exception
    Desc: Print exception message
   
    Test-Condition-1:
      Id: tco_01
      Name: tco_exception
      Desc: Print exception message
      
      Test: |
        mh = MasterHead.get_head()
        old = sys.stdout
        sys.stdout = res = StringIO()
        msg = 'testmsg'
        mh._eh_htk_on_extension_error('test', msg)
        res = res.getvalue()
        sys.stdout = old        
      
      Validate: |       
        this.test_result = res
        assert (msg in res), '_eh_htk_on_extension_error contains {0}'.format(msg)    
        
Test-Scenario-7:
  Id: ts_07
  Path: hydratk/core/eventhandler/01_methods_ut.jedi
  Name: ts_eh_htk_on_cprint
  Desc: Test _eh_htk_on_cprint method
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from hydratk.core.masterhead import MasterHead
    import sys

    try:
        from StringIO import StringIO
    except ImportError:
        from io import StringIO 
  
  Test-Case-1:
    Id: tc_01
    Name: tc_cprint
    Desc: Print messages
   
    Test-Condition-1:
      Id: tco_01
      Name: tco_cprint
      Desc: Print message
      
      Test: |
        mh = MasterHead.get_head()
        old = sys.stdout
        sys.stdout = res = StringIO()
        msg = 'testmsg'
        mh._eh_htk_on_cprint('test', msg)
        res = res.getvalue()
        sys.stdout = old        
      
      Validate: |       
        this.test_result = res
        assert (msg in res), '_eh_htk_on_cprint contains {0}'.format(msg)             
        
Test-Scenario-8:
  Id: ts_08
  Path: hydratk/core/eventhandler/01_methods_ut.jedi
  Name: ts__ec_sig_handler
  Desc: Test _ec_sig_handler method
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from hydratk.core.masterhead import MasterHead  
    import sys
    from signal import SIGPIPE      
  
    try:
        from StringIO import StringIO
    except ImportError:
        from io import StringIO   
  
  Test-Case-1:
    Id: tc_01
    Name: tc_signal
    Desc: Print signal message
   
    Test-Condition-1:
      Id: tco_01
      Name: tco_reg_signal
      Desc: Registered signal  
      
      Test: |
        mh = MasterHead.get_head()
        mh._debug = True
        old = sys.stdout
        sys.stdout = res = StringIO()
        msg = 'testmsg'
        mh._ec_sig_handler('test', SIGPIPE)
        res = res.getvalue()
        sys.stdout = old            
      
      Validate: |  
        this.test_result = res
        assert ('SIGPIPE' in res), '_ec_sig_handler contains SIGPIPE'    
        
    Test-Condition-2:
      Id: tco_02
      Name: tco_no_reg_signal
      Desc: Not registered signal  
      
      Test: |
        mh = MasterHead.get_head()
        mh._debug = True
        old = sys.stdout
        sys.stdout = res = StringIO()
        msg = 'testmsg'
        mh._ec_sig_handler('test', 17)
        res = res.getvalue()
        sys.stdout = old            
      
      Validate: |  
        this.test_result = res
        assert ('17' in res), '_ec_sig_handler contains {0}'.format(17)       
        
Test-Scenario-9:
  Id: ts_09
  Path: hydratk/core/eventhandler/01_methods_ut.jedi
  Name: ts_ec_check_co_privmsg
  Desc: Test method _ec_check_co_privmsg
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from yodalib.hydratk.core.testhead import TestHead
    from yodahelpers.hydratk.core.parallel import init_process, kill_process
  
  Test-Case-1:
    Id: tc_01
    Name: tc_ec_check_co_privmsg
    Desc: Check observer private message
    
    Test-Condition-1: 
      Id: tco_01
      Name: tco_check
      Desc: Check message        
      
      Test: |
        th = TestHead()
        p = init_process('send_pipe', 'PONG')
        th._thr.append(p)   
        th._ec_check_co_privmsg(None)      
      
      Validate: |
        assert True
        kill_process(p)
        th.clear_cmd()   
        
Test-Scenario-10:
  Id: ts_10
  Path: hydratk/core/eventhandler/01_methods_ut.jedi
  Name: ts_ec_check_cw_privmsg
  Desc: Test method _ec_check_cw_privmsg
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from yodalib.hydratk.core.testhead import TestHead
    from yodahelpers.hydratk.core.parallel import init_process, kill_process, send_pipe
    from time import sleep
  
  Test-Case-1:
    Id: tc_01
    Name: tc_ec_check_cw_privmsg
    Desc: Check worker private message
    
    Test-Condition-1: 
      Id: tco_01
      Name: tco_check
      Desc: Check message
      
      Test: |
        th = TestHead()
        p = init_process('recv_pipe', th=th)
        send_pipe(p.pipe_conn, 'PING')
        sleep(1)
      
      Validate: |        
        assert True
        kill_process(p)    
        th.clear_cmd()     
        
Test-Scenario-11:
  Id: ts_11
  Path: hydratk/core/eventhandler/01_methods_ut.jedi
  Name: ts_ec_stop_app
  Desc: Test method _ec_stop_app
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from yodalib.hydratk.core.testhead import TestHead
    from multiprocessing import Process
    from psutil import process_iter
    from time import sleep
    from os import path
  
  Test-Case-1:
    Id: tc_01
    Name: tc_ec_stop_app
    Desc: Stop application
    
    Test-Condition-1: 
      Id: tco_01
      Name: tco_stop
      Desc: Stop
      
      Test: |
        th = TestHead()
        th.register_event_hook('htk_on_sigterm', th._ec_stop_app)
        proc = Process(target=th._start_app)    
        proc.start()            
      
      Validate: |
        sleep(1)
        pid = th._config['Core']['Service']['pid_file']        
        this.test_result = res = path.exists(pid)
        assert (res), 'PID file created'        
        pr = []
        for p in process_iter():
            if ('hydratk' in p.name()):
                pr.append(p.name())
        this.test_result = str(pr)
        exp = ['hydratk/c_obser', 'hydratk/core:1', 'hydratk/core:2', 'hydratk/core:3', 'hydratk/core:4']            
        assert (pr == exp), '1 observer and 4 workers created'
        
        sleep(5)    
        proc.terminate()
        proc.join()
        this.test_result = res = path.exists(pid)
        assert (not res), 'PID file deleted'  
        
        pr = []
        for p in process_iter():
            if ('hydratk' in p.name()):
                pr.append(p.name())
        this.test_result = str(pr)   
        assert (len(pr) == 0), 'processes terminated'
        th.clear_cmd()                                                                            