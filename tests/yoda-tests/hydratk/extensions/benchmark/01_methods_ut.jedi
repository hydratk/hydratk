Test-Scenario-1:
  Id: ts_01
  Path: hydratk/extensions/benchmark/01_methods_ut.jedi
  Name: ts_init_extension
  Desc: Test _init_extension method
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from hydratk.core.masterhead import MasterHead
  
  Test-Case-1:
    Id: tc_01
    Name: tc_init
    Desc: Initialize extension
    
    Test-Condition-1: 
      Id: tco_01
      Name: tco_init
      Desc: Initialize extension
      
      Test: |
        mh = MasterHead.get_head()
        ext = mh._ext['BenchMark']
        ext._ext_id = ext._ext_name = None
        ext._init_extension()
        res = [ext._ext_id, ext._ext_name]
      
      Validate: |
        this.test_result = str(res)
        exp = ['benchmark', 'BenchMark']
        assert (res == exp), '_ext_id, _ext_name = {0}'.format(exp)
        
Test-Scenario-2:
  Id: ts_02
  Path: hydratk/extensions/benchmark/01_methods_ut.jedi
  Name: ts_register_actions
  Desc: Test _register_actions method
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from hydratk.core.masterhead import MasterHead
    import hydratk.core.commandopt as cmdopt
  
  Test-Case-1:
    Id: tc_01
    Name: tc_reg_actions
    Desc: Register extension actions
    
    Test-Condition-1: 
      Id: tco_01
      Name: tco_reg
      Desc: Register actions
      
      Test: |
        mh = MasterHead.get_head()
        ext = mh._ext['BenchMark']  
        cmd, opt = 'start-benchmark', 'details'
        del mh._cmd_hooks[cmd]
        del cmdopt.cmd['htk'][cmdopt.cmd['htk'].index(cmd)]
        del cmdopt.long_opt['htk'][cmdopt.long_opt['htk'].index(opt)] 
        ext._register_actions()
        res = mh._cmd_hooks.keys()
        
      Validate: |
        this.test_result = str(res)
        assert (cmd in res), '_cmd_hooks contains {0}'.format(cmd)
        res = cmdopt.long_opt['htk']
        this.test_result = str(res)
        assert (opt in res), 'long_opt contains {0}'.format(opt)
                
Test-Scenario-3:
  Id: ts_03
  Path: hydratk/extensions/benchmark/01_methods_ut.jedi
  Name: ts_setup_params
  Desc: Test _setup_params method
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from yodalib.hydratk.core.testhead import TestHead
  
  Test-Case-1:
    Id: tc_01
    Name: tc_setup
    Desc: Setup parameters
    
    Test-Condition-1: 
      Id: tco_01
      Name: tco_details
      Desc: Set details
      
      Test : |
        th = TestHead()
        ext = th._ext['BenchMark']
        th.pre_replace()
        TestHead.options = {'details': True}
        ext._setup_params()
        res = ext._print_details
      
      Validate: |        
        this.test_result = res
        assert (res), '_print_details = True'
        
    Test-Condition-2: 
      Id: tco_02
      Name: tco_no_details
      Desc: Set no details
      
      Test : |
        TestHead.options['details'] = False
        ext._setup_params()
        res = ext._print_details
      
      Validate: |        
        this.test_result = res
        assert (not res), '_print_details = False'
        
Test-Scenario-4:
  Id: ts_04
  Path: hydratk/extensions/benchmark/01_methods_ut.jedi
  Name: ts_event_thru_test
  Desc: Test _event_thru_test method
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from hydratk.core.masterhead import MasterHead
  
  Test-Case-1:
    Id: tc_01
    Name: tc_event_test
    Desc: Test event throughput
    
    Test-Condition-1: 
      Id: tco_01
      Name: tco_test
      Desc: Process test
      
      Test: |
        mh = MasterHead.get_head()
        ext = mh._ext['BenchMark'] 
        ext._event_thru_test()
        res = ext._test_results['1Kb data Event througput(10 000 000)']
      
      Validate: |             
        this.test_result = res
        assert (res > 0.0), '_test_results is not empty'
        
Test-Scenario-5:
  Id: ts_05
  Path: hydratk/extensions/benchmark/01_methods_ut.jedi
  Name: ts_factorial_test
  Desc: Test _factorial_test method
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from hydratk.core.masterhead import MasterHead
  
  Test-Case-1:
    Id: tc_01
    Name: tc_factorial_test
    Desc: Test factorial calculation
    
    Test-Condition-1: 
      Id: tco_01
      Name: tco_test
      Desc: Process test        
      
      Test: |
        mh = MasterHead.get_head()
        ext = mh._ext['BenchMark'] 
        ext._factorial_test()
        res = ext._test_results['Factorial(10000)']
      
      Validate: |             
        this.test_result = res
        assert (res != ''), '_test_results is not empty'      
        
Test-Scenario-6:
  Id: ts_06
  Path: hydratk/extensions/benchmark/01_methods_ut.jedi
  Name: ts_fib_test
  Desc: Test _fib_test method
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from hydratk.core.masterhead import MasterHead
  
  Test-Case-1:
    Id: tc_01
    Name: tc_fib_test
    Desc: Test Fibonacci calculation
    
    Test-Condition-1: 
      Id: tco_01
      Name: tco_test
      Desc: Process test        
      
      Test: |
        mh = MasterHead.get_head()
        ext = mh._ext['BenchMark'] 
        ext._fib_test()
        res = ext._test_results['Fibonacci(10000)']
      
      Validate: |             
        this.test_result = res
        assert (res != ''), '_test_results is not empty'      
        
Test-Scenario-7:
  Id: ts_07
  Path: hydratk/extensions/benchmark/01_methods_ut.jedi
  Name: ts_calc_flops_test
  Desc: Test _calc_flops_test method
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from hydratk.core.masterhead import MasterHead
  
  Test-Case-1:
    Id: tc_01
    Name: tc_floating_test
    Desc: Test floating point calculation
    
    Test-Condition-1: 
      Id: tco_01
      Name: tco_test
      Desc: Process test        
      
      Test: |
        mh = MasterHead.get_head()
        ext = mh._ext['BenchMark']
        ext._check_cycles = 1 
        ext._calc_flops_test()
        res = ext._test_results['1 GFLOP']
      
      Validate: |             
        this.test_result = res
        assert (res != ''), '_test_results is not empty'    
        ext._check_cycles = 10                        